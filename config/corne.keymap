/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&led_strip { chain-length = <27>; };

/ {
    macros {
        desktop_right: desktop_right {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL>,
                <&macro_press>,
                <&kp LEFT_GUI>,
                <&macro_tap>,
                <&kp RIGHT>,
                <&macro_release>,
                <&kp LCTRL>,
                <&macro_release>,
                <&kp LEFT_GUI>;

            label = "DESKTOP_RIGHT";
        };

        desktop_left: desktop_left {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL>,
                <&macro_press>,
                <&kp LEFT_GUI>,
                <&macro_tap>,
                <&kp LEFT>,
                <&macro_release>,
                <&kp LCTRL>,
                <&macro_release>,
                <&kp LEFT_GUI>;

            label = "DESKTOP_LEFT";
        };
    };

    behaviors {
        caps_tap: caps_tap {
            compatible = "zmk,behavior-tap-dance";
            label = "CAPS_TAP";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp LEFT_SHIFT>, <&kp CAPSLOCK>;
        };
    };

    combos {
        compatible = "zmk,combos";

        esc_combo {
            bindings = <&kp ESCAPE>;
            key-positions = <19 20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB       &kp Q  &kp W  &kp E             &kp R      &kp T    &kp Y  &kp U      &kp I      &kp O    &kp P     &kp BSPC
&kp LEFT_ALT  &kp A  &kp S  &kp D             &kp F      &kp G    &kp H  &kp J      &kp K      &kp L    &kp SEMI  &kp SQT
&caps_tap     &kp Z  &kp X  &kp C             &kp V      &kp B    &kp N  &kp M      &kp COMMA  &kp DOT  &kp FSLH  &caps_tap
                            &mt LCTRL ESCAPE  &kp ENTER  &mo 2    &mo 1  &kp SPACE  &kp RALT
            >;
        };

        lower {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp F1   &kp F2   &kp F3         &kp F4          &kp F5    &kp F6    &kp F7    &kp F8  &kp F9     &kp F10  &trans
&trans  &kp F11  &kp F12  &desktop_left  &desktop_right  &trans    &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans   &trans
&trans  &trans   &trans   &trans         &trans          &trans    &trans    &trans    &trans  &trans     &trans   &trans
                          &trans         &trans          &mo 3     &trans    &trans    &trans
            >;
        };

        raise {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans    &kp EXCL      &kp AT        &kp HASH      &kp DLLR          &kp PRCNT         &kp CARET        &kp AMPS           &kp STAR      &kp LPAR      &kp RPAR              &trans
&kp PIPE  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4      &kp NUMBER_5      &kp NUMBER_6     &kp NUMBER_7       &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0          &kp GRAVE
&trans    &trans        &kp MINUS     &kp UNDER     &kp LEFT_BRACKET  &kp LEFT_BRACE    &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &kp EQUAL     &kp PLUS      &kp NON_US_BACKSLASH  &trans
                                      &trans        &trans            &trans            &mo 3            &trans             &trans
            >;
        };

        dual {
            bindings = <
&trans          &trans        &trans        &trans        &trans        &trans          &trans  &trans           &trans           &trans  &trans  &trans
&bt BT_CLR_ALL  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &rgb_ug RGB_EFR  &rgb_ug RGB_EFF  &trans  &trans  &trans
&trans          &trans        &trans        &trans        &trans        &trans          &trans  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &trans  &trans  &rgb_ug RGB_TOG
                                            &trans        &trans        &trans          &trans  &trans           &trans
            >;
        };
    };
};
